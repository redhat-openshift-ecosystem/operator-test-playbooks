# - name: "Setting 'bundle_index_image' variable"
#   set_fact:
#     bundle_index_image: "{{ bundle_registry }}/{{ bundle_index_image_namespace }}/{{ bundle_index_image_name }}:{{ bundle_index_image_version }}"

- name: "Setting 'bundle_index_image' to '{{ bundle_registry }}/{{ bundle_index_image_namespace }}/{{ bundle_index_image_name }}:{{ bundle_index_image_version }}'"
  set_fact:
    bundle_index_image: "{{ bundle_registry }}/{{ bundle_index_image_namespace }}/{{ bundle_index_image_name }}:{{ bundle_index_image_version }}"

- name: "Setting 'bundle_index_image' for openshift robot"
  set_fact:
    bundle_index_image: "{{ openshift_robot_hash_array[0] }}/{{ bundle_index_image_name }}:{{ openshift_robot_hash_array[2] }}"
  when:
    - openshift_robot_hash_array.2 is defined
    - openshift_robot_hash_array.2 != ""

- name: "Remove index image '{{ bundle_index_image }}'"
  shell: "{{ container_tool }} rmi -f {{ bundle_index_image }}"
  failed_when: false

- name: "Reseting 'operators_for_index' variable when 'index_skip' is true"
  set_fact:
    operators_for_index: "[]"
  when: index_skip is defined and index_skip|bool

- name: "Printing operators for index to be added"
  debug:
    var: operators_for_index

- name: "Build index image for all operators"
  include_role:
    name: build_operator_index
  vars:
    ba_name: "{{ ops_item.name }}"
    ba_versions: "{{ ops_item.versions }}"
    ba_versions_prod: "{{ ops_item.versions_prod | default([]) }}"
  loop: "{{ operators_for_index }}"
  loop_control:
    loop_var: ops_item
