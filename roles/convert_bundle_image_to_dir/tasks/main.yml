---
- name: Handle operator image input
  block:
    - name: Set input image
      set_fact:
        operator_input_image: "{{ operator_input_image | regex_replace('[A-z]*://', '') }}"
        operator_input_local_image: "{{ operator_input_local_registry }}/{{ operator_input_image | regex_replace('[A-z]*://', '') | basename}}"

    - name: Remove previous input image from local registry
      shell: "{{ container_tool }} rmi -f {{ operator_input_local_image }}"

    - name: Pull input image
      shell: "{{ container_tool }} pull {{ operator_input_image }}"

    - name: Tag input image
      shell: "{{ container_tool }} tag {{ operator_input_image }} {{ operator_input_local_image }}"

    - name: Push input image to local registry
      shell: "{{ container_tool }} push {{ operator_input_local_image }}"

    - name: "Ensure that the operator tmp bundle input directory exists and is empty"
      file:
        state: "{{ item }}"
        path: "{{ bundle_input_tmp_dir }}"
      with_items:
        - absent
        - directory
      when: bundle_input_tmp_dir is defined

    - name: "Ensure that the operator bundle input directory exists and is empty"
      file:
        state: "{{ item }}"
        path: "{{ bundle_input_src_dir }}"
      with_items:
        - absent
        - directory
      when: bundle_input_src_dir is defined

    - name: "Extract the operator bundle image into opearator dir"
      include_role:
        name: extract_operator_bundle
      vars:
        bundle_image: "{{ operator_input_local_image }}"
        operator_bundle_dir: "{{ bundle_input_tmp_dir }}"
        operator_work_dir: "{{ bundle_input_src_dir }}"

    - name: "Prepare operator directory from bundle src (bundle input)"
      block:
        - name: "Export CSV variables"
          include_role:
            name: export_csv
          vars:
            op_csv_dir: "{{ bundle_input_src_dir }}"

        - name: "Set operator_dir"
          set_fact:
            operator_dir: "{{ bundle_input_src_dir }}/{{ operator_vars.metadata.name | replace('.v','/') }}"

        - name: "Ensure that the operator bundle input directory exists and is empty"
          file:
            state: "{{ item }}"
            path: "{{ operator_dir }}"
          with_items:
            - absent
            - directory

        - name : "Move bundle dir to {{ operator_dir }}"
          copy:
            src: "{{ bundle_input_src_dir }}/{{ item }}"
            dest: "{{ operator_dir }}/"
            remote_src: yes
            directory_mode: yes
          with_items:
            - manifests
            - metadata
        - name: Set facts
          set_fact:
            operator_dir: "{{ operator_dir | dirname }}"
  when:
    - operator_input_image is defined
    - operator_input_image != ""
