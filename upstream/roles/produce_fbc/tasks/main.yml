---
- name: "Set pfbc_rc to false"
  set_fact:
    pfbc_rc: false

- name: "Delete directory for fbc extraction"
  file:
    path: "{{ pfbc_extracted_fbc_location }}"
    state: absent

- name: "Prepare directory"
  file:
    path: "{{ pfbc_extracted_fbc_location }}"
    state: directory

- name: "Get current state"
  include_role:
    name: extract_files_from_image
  vars:
    effi_image: "{{ pfbc_file_index }}"
    effi_copy_source_path: "{{ pfbc_operator_yaml_location }}"
    effi_target_copy_path: "{{ pfbc_extracted_fbc_location }}"
  when: pfbc_index_update|bool

- name: "Set local FBC path"
  set_fact:
    pfbc_fbc_config_path: "{{ pfbc_extracted_fbc_location }}/configs"

- name: "Render index from bundles"
  include_role:
    name: render_files
  vars:
    rf_render_output_dir: "{{ pfbc_extracted_fbc_location }}"
    rf_render_output_root: "{{ pfbc_operator_yaml_location }}"
    rf_render_from: "{{ pfbc_render_from }}"
  loop: "{{ pfbc_bundles_to_process | list }}"
  loop_control:
    loop_var: rf_render_target
  when: pfbc_render_from == "bundle"

- name: "Render index from temp index"
  include_role:
    name: render_files
  vars:
    rf_render_output_dir: "{{ pfbc_extracted_fbc_location }}"
    rf_render_output_root: "{{ pfbc_operator_yaml_location }}"
    rf_render_target: "{{ pfbc_sql_index }}"
    rf_render_from: "{{ pfbc_render_from }}"
  loop_control:
    loop_var: rf_render_target
  when: pfbc_render_from == "index"

- name: "Set Dockerfile path to {{ pfbc_fbc_config_path }}.Dockerfile"
  set_fact:
    pfbc_dockerfile_path: "{{ pfbc_fbc_config_path }}.Dockerfile"

- name: "Delete Dockerfile"
  file:
    path: "{{ pfbc_dockerfile_path }}"
    state: absent

- name: "Create dockerfile '{{ pfbc_dockerfile_path }}'"
  shell:
    cmd: "{{ opm_bin_path }} generate dockerfile {{ pfbc_fbc_config_path }}"
    chdir: "{{ pfbc_extracted_fbc_location }}"
  register: pfbc_rc

- name: "Detect if the following opm cache issue line is present '{{ opm_cache_host_bug_line }}'"
  lineinfile:
    path: "{{ pfbc_dockerfile_path }}"
    regexp: "{{ opm_cache_host_bug_line }}"
    state: absent
  check_mode: yes
  changed_when: false
  register: pfbc_opm_bug_line

- name: "Workaround for opm cache issue on a host machine"
  block:

    - name: "Replace run command with a copy command"
      ansible.builtin.lineinfile:
        path: "{{ pfbc_dockerfile_path }}"
        regexp: "{{ opm_cache_host_bug_line }}"
        line: 'COPY --chown=1001:0 cache {{ pfbc_local_cache_dir }}'

    - name: "Create cache directory"
      file:
        path: "{{ pfbc_extracted_fbc_location }}/cache"
        state: directory
        mode: 01777

    - name: "Fail on registry.redhat.io login "
      fail:
        msg: "Unable to login to registry.redhat.io with user '{{ registry_redhat_io_user }}'"
      when:
        - (registry_redhat_io_user is undefined and registry_redhat_io_token is undefined) or (registry_redhat_io_user|length == 0 or registry_redhat_io_token|length == 0)

    - name: "Login to registry.redhat.io"
      shell: "{{ container_tool }} login -u='{{ registry_redhat_io_user }}' -p='{{ registry_redhat_io_token }}' registry.redhat.io"
      # no_log: true
      when:
        - registry_redhat_io_user is defined and registry_redhat_io_token is defined
        - registry_redhat_io_user|length > 0 or registry_redhat_io_token|length > 0
        - mirror_multiarch_image.startswith('registry.redhat.io')

    - name: "Generate cache locally"
      # shell: "{{ opm_bin_path }} serve {{ pfbc_fbc_config_path }} --cache-dir={{ pfbc_local_cache_dir }} --cache-only --termination-log /dev/null"
      shell: "{{ container_tool }} run -it --rm --entrypoint /bin/opm -v {{ pfbc_extracted_fbc_location }}:/conf -u 1001:0 {{ mirror_multiarch_image }} serve /conf/configs --cache-dir=/conf/cache --cache-only --termination-log /dev/null"

    # - name: "Copy cache"
    #   synchronize:
    #     src: "{{ pfbc_local_cache_dir }}/"
    #     dest: "{{ pfbc_extracted_fbc_location }}/cache/"

  when: pfbc_opm_bug_line.found

- debug:
    msg: "Warning: Cannot find a line to be replaced due to CLOUDDST-15194. May not work as expected, the following line not found: {{ opm_cache_host_bug_line }}"
  when: not pfbc_opm_bug_line.found
