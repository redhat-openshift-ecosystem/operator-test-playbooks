---
- name: "Operator info"
  block:
    - name: "Print operator dir"
      debug:
        var: operator_base_dir
    - name: " Handle 'supported_cluster_versions'"
      set_fact:
        oi_supported_cluster_versions: []
      when: supported_cluster_versions == "latest"

    - name: "Handle situation when 'operator_dir' is defined"
      set_fact:
        operators: "{{ operator_dir | basename }}"
        operator_base_dir: "{{ operator_dir | dirname }}"
      when:
        - operator_dir is defined
        - operator_dir|length > 0

    - name: "Handle operators input file"
      block:
        - name: "Parsing config file '{{ operators_config }}'"
          include_vars:
            file: "{{ operators_config }}"
            name: operators_config_vars
        - name: "Set facts from config variables"
          set_fact:
            operators: "{{ (operators_config_vars.operators | join(',')) | default('') }}"
            operator_base_dir: "{{ operators_config_vars.operator_base_dir | default('') }}"
        - name: "Failing when 'operator base dir' is not found in '{{ operators_config }}'"
          fail:
            msg: "'operator_base_dir' was not found in config file '{{ operators_config }}' !!!"
          when: operator_base_dir|length == 0
        - name: "Checking if operator base dir exists"
          stat:
            path: "{{ operator_base_dir }}"
          register: operator_base_dir_st
        - name: "Failing when operator base dir doesn't exists"
          fail:
            msg: "Operator base dir '{{ operator_base_dir }}' was not found !!!"
          when: not operator_base_dir_st.stat.exists
        - name: "Failing when 'operator_base_dir' is not defined or is empty"
          fail:
            msg: "The 'operator_base_dir' is not defined or is empty"
          when: operator_base_dir|length == 0
      when: operators_config is defined

    - name: "Ensure that the 'operator_bundle_src_dir' directory exists and is empty"
      file:
        state: "{{ item }}"
        path: "{{ operator_bundle_src_dir }}"
      with_items:
        - absent
        - directory
      when: run_remove_operator_bundle_src_dir is undefined or run_remove_operator_bundle_src_dir|bool

    - name: "Resetting 'op_info' object"
      set_fact:
        op_info: []
        oi_failed_labels: []
        oi_auto_labels: []
        oi_auto_label_error_msg: ""
        oi_failed_label_error_msg: ""

    - name: "Loop over operators"
      include_tasks: op_info.yml
      loop: "{{ operators.split(',') }}"
      loop_control:
        loop_var: oi_operator_name

    - name: "Print 'op_info'"
      debug:
        var: op_info

    - name: "Generate operators info config file"
      copy: content="{{ op_info | to_nice_yaml }}" dest="{{ operator_info_output_file }}"

    - name: "Fail"
      block:
        - name: "Generate error file"
          copy: content="operators:\n{{ oi_failed_labels | to_nice_yaml }}" dest="{{ oi_failed_labels_output_file }}"

        - name: "Prints error message"
          set_fact:
            oi_failed_label_error_msg: |
              Found label which is not supported.
              {{ oi_failed_labels }}

      when:
        - oi_failed_labels.0 is defined
        - strict_cluster_version_labels|bool

    - name: "Fail when automatic cluster version label is needed and 'automatic_cluster_version_label' is not set to True"
      block:
        - name: "Generate error file"
          copy: content="operators:\n{{ oi_auto_labels | to_nice_yaml }}" dest="{{ oi_auto_labels_output_file }}"

        - name: "Prints error message"
          set_fact:
            oi_auto_label_error_msg: |
              Automatic cluster versions lables are needed and 'automatic_cluster_version_label' is set to False.
              More info about list of versions is listed below.
              {{ oi_auto_labels }}

      when:
        - not automatic_cluster_version_label|bool
        - oi_auto_labels.0 is defined

    - name: "Print final error regarding deprecated API vs operator label"
      block:
        - name: "Debug oi_failed_labels"
          debug:
            var: oi_failed_labels
        - name: "Debug oi_auto_labels"
          debug:
            var: oi_auto_labels

        - name: "Printing error message"
          fail:
            msg: "{{ oi_auto_label_error_msg.split('\n') }}{{ oi_failed_label_error_msg.split('\n') }}"
      when: (oi_failed_labels.0 is defined and strict_cluster_version_labels|bool) or (not automatic_cluster_version_label|bool and oi_auto_labels.0 is defined)

    - name: "Set operator info file"
      set_fact:
        operator_info_file: "{{ operator_info_output_file }}"
  when: operator_info_file is undefined
- name: "Print 'operator_info_file'"
  debug:
    var: operator_info_file

- name: "Load operator info from file"
  include_role:
    name: operator_info_load
