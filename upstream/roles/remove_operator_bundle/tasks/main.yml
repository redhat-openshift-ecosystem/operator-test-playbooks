- name: "Removing operator"
  block:
    - name: "Quay login via auth token"
      shell: "{{ container_tool }} login -u=\\$oauthtoken -p={{ quay_api_token }} quay.io"
      no_log: true
      when:
        - quay_api_token is defined
        - quay_api_token|length > 0

    - name: "Setting index version and operator dirname"
      set_fact:
        rob_index_version: "{{ bundle_index_image_version }}"
        operator_dir_name: "{{ operator_dir | basename }}"

    - name: "Setting index version"
      set_fact:
        rob_index_version: "{{ bob_remove_loop }}"
      when:
        - bob_remove_loop is defined
        - bob_remove_loop|length > 0

    - name: "Remove repo '{{ bundle_image_namespace }}/{{ operator_dir_name }}' from 'quay'"
      block:
        - name: "Reset 'rob_versions_rm_repo' variable"
          set_fact:
            rob_versions_rm_repo: []
            rob_versions_rm_repo_full: []

        - name: "Get list of tags for index image from bundle registry ('{{ bundle_registry }}/{{ bundle_image_namespace }}/{{ operator_dir_name }}')"
          include_tasks: rob_versions.yml
          vars:
            rob_url: "/v2/{{ bundle_image_namespace }}/{{ operator_dir_name }}/tags/list"

        - name: "Setting all versions to 'rob_versions_rm_repo' variable without '{{ ignore_image_string }}' to avoid adding to an index"
          set_fact:
            rob_versions_rm_repo: "{{ rob_versions_rm_repo_full | reject('search', ignore_image_string) | list | sort_versions }}"
          when:
            - rob_versions_rm_repo_full.0 is defined

        - name: "Print versions to be removed from '{{ bundle_image_namespace }}/{{ operator_dir_name }}'"
          debug:
            var: rob_versions_rm_repo

        - name: "Delete specifig tags from repo '{{ bundle_image_namespace }}/{{ operator_dir_name }}'"
          uri:
            url: "https://quay.io/api/v1/repository/{{ bundle_image_namespace }}/{{ operator_dir_name }}/tag/{{ op_ver_rm_item }}"
            method: DELETE
            force_basic_auth: true
            headers:
              Authorization: "Bearer {{ quay_api_token }}"
            status_code: 204
          failed_when: false
          loop: "{{ rob_versions_rm_repo }}"
          loop_control:
            loop_var: op_ver_rm_item
          when: rob_versions_rm_repo.0 is defined

        # - name: "Remove repo '{{ bundle_image_namespace }}/{{ operator_dir_name }}' from 'quay'"
        #   uri:
        #     url: "https://quay.io/api/v1/repository/{{ bundle_image_namespace }}/{{ operator_dir_name }}"
        #     method: DELETE
        #     force_basic_auth: true
        #     headers:
        #       Authorization: "Bearer {{ quay_api_token }}"
        #     status_code: 204
        #   failed_when: false

      when:
        - quay_api_token is defined
        - quay_api_token|length > 0
        - operator_version is undefined or operator_version|length == 0

    - name: "Delete specifig tags from operrator {{ operator_dir_name }}"
      uri:
        url: "https://quay.io/api/v1/repository/{{ bundle_image_namespace }}/{{ operator_dir_name }}/tag/v{{ operator_version }}"
        method: DELETE
        force_basic_auth: true
        headers:
          Authorization: "Bearer {{ quay_api_token }}"
        status_code: 204
      failed_when: false
      when:
        - quay_api_token is defined
        - quay_api_token|length > 0
        - operator_version is defined
        - operator_version|length > 0

    - name: "Get list of tags for index image from bundle registry"
      uri:
        url: "{{ registry_api_http_protocol | default('https') }}://{{ bundle_registry }}/v2/{{ bundle_index_image_namespace }}/{{ bundle_index_image_name }}/tags/list"
      register: rob_registry_versions
      failed_when: false

    - name: "Removed operator '{{ operator_dir_name }}' from index '{{ bundle_registry }}{{ bundle_index_image_namespace }}/{{ bundle_index_image_name }}' when index exists"
      block:
        - name: "Setting bundle image name"
          set_fact:
            bundle_index_image: "{{ bundle_registry }}/{{ bundle_index_image_namespace }}/{{ bundle_index_image_name }}:{{ rob_index_version }}"
            opm_index_add_extra_args: "--from-index {{ bundle_registry }}/{{ bundle_index_image_namespace }}/{{ bundle_index_image_name }}:{{ rob_index_version }}"

        - name: "Setting 'index rm' container option"
          set_fact:
            boi_index_args: "-c {{ opm_container_tool_index }}"
          when:
            - opm_container_tool_index is defined
            - opm_container_tool_index|length > 0

        - name: "Remove '{{ operator_dir_name }}' operator from index image {{ bundle_index_image }}"
          shell: "{{ opm_bin_path }} index rm {{ boi_index_args }} --operators {{ operator_dir_name }} --tag {{ bundle_index_image }}  {{ opm_index_add_extra_args }}"
          register: rob_rc
          ignore_errors: true

        - name: "Index safety check to avoid accidental overwrite"
          include_role:
            name: export_list_of_packages_from_index
          vars:
            bundle_index_image_input: "{{ bundle_index_image }}"
            index_pull_skip: true
          when: min_operators_in_index_allowed is defined

        - name: "Push index image '{{ bundle_index_image }}'"
          include_role:
            name: operator_push_image
          vars:
            fqp_image: "{{ bundle_index_image }}"
          when: rob_rc.rc == 0

        - name: "Set 'result_rc' to false"
          set_fact:
            result_rc: false

        - name: "Set 'result_rc'"
          set_fact:
            result_rc: true
          when: ((rob_rc.rc is defined and rob_rc.rc == 0) and rc_last|bool)

        - name: "Prints message that bundles were added to catalog"
          debug:
            msg: "Operator '{{ operator_dir_name }}' were removed and push to catalog '{{ bundle_index_image }}' : [OK]"
          when:
            - result_rc|bool

        - name: "Print failing msg that bundle was not added to catalog or not pushed"
          debug:
            msg: "Operator '{{ operator_dir_name }}' were removed and push to catalog '{{ bundle_index_image }}' : [FAIL]"
          when:
            - not result_rc|bool
            - (strict_mode is undefined or not strict_mode|bool)

        - name: "Failing when bundle was not added to catalog or not pushed"
          fail:
            msg: "Operator '{{ operator_dir_name }}' were removed and push to catalog '{{ bundle_index_image }}' : : [FAIL]"
          when:
            - not result_rc|bool
            - (strict_mode is defined and strict_mode|bool)

        - name: "Remove temporary bundle export dir '{{ bundle_export_dir_remove }}'"
          file:
            path: "{{ bundle_export_dir_remove }}"
            state: absent

        - name: "Trying to export operator '{{ operator_dir_name }}' from index image {{ bundle_index_image }}"
          shell: "{{ opm_bin_path }} index export {{ boi_index_args }} --package {{ operator_dir_name }} --index {{ bundle_index_image }} --download-folder {{ bundle_export_dir_remove }}"
          register: rob_export_rc

        - name: "Append '{{ operator_dir_name }}' to '{{ bundle_export_dir_remove }}'"
          set_fact:
            bundle_export_dir_remove_op: "{{ bundle_export_dir_remove }}/{{ operator_dir_name }}"

        - name: "Search for all operators '{{ bundle_export_dir_remove_op }}'"
          find:
            paths: "{{ bundle_export_dir_remove_op }}"
            recurse: false
            file_type: directory
          register: rob_operators_find

        - name: "Fail when export works after removal of operator '{{ operator_dir_name }}' from index image {{ bundle_index_image }}"
          fail:
            msg: "Operator '{{ operator_dir_name }}' was not correctly removed from {{ bundle_index_image }} !!! Look in exported directory '{{ bundle_export_dir_remove_op }}' on remote host for more info."
          when: rob_operators_find.files.0 is defined
      when:
        - rob_registry_versions.status == 200

    - name: "Setting operator was removed"
      set_fact:
        operator_removed: true

  tags:
    - always
    - deploy_bundles
    - remove_operator
