---
- name: "Reset ia_index_* values"
  set_fact:
    ia_index_type: ""
    ia_index_tags: []
    ia_index_shas: []

- name: "Pull index image '{{ ia_index_image }}'"
  shell: "{{ container_tool }} pull {{ ia_index_image }}"
  retries: "{{ default_retries }}"
  delay: "{{ default_delay }}"

- name: "Delete previous container '{{ ia_container_name }}'"
  shell: "{{ container_tool }} rm -f {{ ia_container_name }}"
  failed_when: false

- name: "Start index image '{{ ia_index_image }}' container '{{ ia_container_name }}'"
  shell: "{{ container_tool }} run -d -p 50051:50051 --name {{ ia_container_name }} {{ ia_index_image }}"

- name: "Check if index '{{ ia_index_image }}' is 'db' type"
  shell: "{{ container_tool }} exec {{ ia_container_name }} ls /database/index.db"
  register: ia_check_db
  failed_when: false

- name: "Check if index '{{ ia_index_image }}' is 'fbc' type"
  shell: "{{ container_tool }} exec {{ ia_container_name }} ls /configs"
  register: ia_check_fbc
  failed_when: false

- name: "Set 'ia_index_image_type' to 'db'"
  set_fact:
    ia_index_type: "db"
  when:
    - ia_check_db.rc is defined
    - ia_check_db.rc == 0

- name: "Set 'ia_index_image_type' to 'fbc'"
  set_fact:
    ia_index_type: "fbc"
  when:
    - ia_check_fbc.rc is defined
    - ia_check_fbc.rc == 0

- name: "Getting list of shas"
  shell: "{{ testing_bin_path }}/grpcurl -plaintext -connect-timeout 120 localhost:50051 api.Registry.ListBundles| {{ jq_bin_path }} -r '.bundlePath'"
  register: ia_list_shas_cmd

- name: "Set 'ia_index_tags_all'"
  set_fact:
    ia_index_tags_all: "{{ ia_list_shas_cmd.stdout.split('\n') }}"

- name: "Handle situation when there is at least one version in index"
  block:
    - name: "Set 'ia_index_tags'"
      set_fact:
        ia_index_tags: "{{ ia_index_tags_all | reject('search', '@') | list | unique | sort }}"

    - name: "Set 'ia_index_shas'"
      set_fact:
        ia_index_shas: "{{ ia_index_tags_all | difference(ia_index_tags) | unique | sort }}"

    - name: "Print index statistics for '{{ ia_index_image }}'"
      debug:
        msg: "Index : '{{ ia_index_image }}' type={{ ia_index_type }} tags={{ ia_index_tags|length }} shas={{ ia_index_shas|length }}"

    - name: "Fail when index '{{ ia_index_image }}' is not '{{ ia_request_index_type }}'"
      fail:
        msg: "Error: Index '{{ ia_index_image }}' ({{ ia_index_type }}) is not same as requested '{{ ia_request_index_type }}' type"
      when:
        - ia_request_index_type is defined
        - ia_request_index_type|length > 0
        - ia_request_index_type != ia_index_type

    - name: "Fail when index '{{ ia_index_image }}' should be 'sha' type but it has entries with 'non sha tags'"
      block:
        - name: "Print db versions"
          debug:
            var: ia_index_tags

        - name: "Fail when index '{{ ia_index_image }}' should be 'sha' type but it has entries with 'non sha tags'"
          fail:
            msg: "Error: Index '{{ ia_index_image }}' type={{ ia_request_index_tag_type }} has operators in with type=tag n={{ ia_index_tags|length }} !!!"
      when:
        - ia_request_index_tag_type is defined
        - ia_request_index_tag_type|length > 0
        - ia_request_index_tag_type == "sha"
        - ia_index_tags|length > 0

    - name: "Fail when index '{{ ia_index_image }}' is not '{{ ia_request_index_type }}'"
      block:
        - name: "Print sha versions"
          debug:
            var: ia_index_shas

        - name: "Fail when index '{{ ia_index_image }}' is not '{{ ia_request_index_type }}'"
          fail:
            msg: "Error: Index '{{ ia_index_image }}' type={{ ia_request_index_tag_type }} has operators in with type=sha n={{ ia_index_shas|length }} !!!"
      when:
        - ia_request_index_tag_type is defined
        - ia_request_index_tag_type|length > 0
        - ia_request_index_tag_type == "tag"
        - ia_index_shas|length > 0
  when:
    - ia_index_tags_all.0 is defined
    - ia_index_tags_all.0|length > 0
